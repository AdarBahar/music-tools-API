services:
  music-tools-API:
    build: .
    container_name: music-tools-API
    ports:
      - "8001:8000"  # External port 8001, internal port 8000
    volumes:
      # Persistent storage for uploads and outputs
      - ./data/uploads:/app/uploads
      - ./data/outputs:/app/outputs
      - ./data/logs:/app/logs
      # Optional: Mount custom config
      - ./.env:/app/.env:ro
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
      - MAX_FILE_SIZE_MB=100
      - CLEANUP_INTERVAL_HOURS=24
      - FILE_RETENTION_HOURS=48
      - DEFAULT_DEMUCS_MODEL=htdemucs
      - DEFAULT_STEM_FORMAT=mp3
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    
    # Resource limits (adjust based on your system)
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    
    # Health check (internal port is still 8000)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: music-tools-redis
    ports:
      - "6380:6379"  # Use port 6380 externally to avoid conflicts
    volumes:
      - redis_data:/data
    restart: unless-stopped

    # Redis configuration
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: music-tools-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/outputs:/var/www/downloads:ro
      # SSL certificates (if using HTTPS)
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - music-tools-api
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:

networks:
  default:
    name: music-tools-network
